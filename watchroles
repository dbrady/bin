#!/usr/bin/env ruby
# watchroles - watch the DS-3303 tables
require "colorize"
require "optimist"
String.disable_colorization unless $stdout.tty?

opts = Optimist.options do
  opt :debug, "Print extra debug info", default: false
end
puts opts.inspect if opts[:debug]


suffixes = [nil, "_load", "_load_load", "_historical"]

# warehouse | table | check
# r/s       | of 4 | table is load or table exists
#                  | table has role column
#                  | table is not empty

def cache_command(command)
  @cache_command ||= {}
  @cache_command[command] ||= `#{command}`.each_line.map(&:rstrip)
end

def log(message)
  @log_lines ||= []

  @log_lines << message
end

def print_log!
  system "clear"
  puts @log_lines
  @log_lines = []
end

def table_is_load?(warehouse, table)
  return true if table.include? "_load"
end

def table_exists?(warehouse, table)
  command = "wh-describe-table --warehouse=#{warehouse} #{table}"

  output_lines = cache_command(command)

  output_lines.any? {|line| line.include? "mp_user_id" }
end

def table_has_role_column?(warehouse, table)
  # if it's a load table AND it doesn't exist, this is fine
  return true if table_is_load?(warehouse, table) && !table_exists?(warehouse, table)

  command = "wh-describe-table --warehouse=#{warehouse} #{table}"

  output_lines = cache_command(command)

  output_lines.any? {|line| line.include? "role" }
end

def table_has_data?(warehouse, table)
  return true if table_is_load?(warehouse, table)

  command = "dsquery --warehouse=#{warehouse} 'SELECT COUNT(*) FROM #{table}'"

  !cache_command(command).join("\n").to_i.zero?
end

def show_test(name, warehouse, table, status)
  message = "#{warehouse}:#{table}: #{name}"
  bg_color = status ? 'on_green' : 'on_red'
  message = message.sub(/ has /, " HAS NO ") unless status
  command = "rub1nner --vpadding=0 --left --bold white #{bg_color} '#{message}'"

  log `#{command}`
end

command = "rub1nner --vpadding=0 --bold white on_green watchroles"
title = `#{command}`
log title

time = `TZ=America/Denver date`
command = "rub1nner --vpadding=0 --right --bold white on_green '#{time}'"
title = `#{command}`.strip
log title

%w(redshift snowflake).each do |warehouse|
  suffixes.each do |suffix|
    table = "d_team_list_collections_gsheet#{suffix}"

    if !table_is_load?(warehouse, table)
      show_test "table exists", warehouse, table, table_exists?(warehouse, table)
    end
    show_test "table has role column", warehouse, table, table_has_role_column?(warehouse, table)
    show_test "table has data", warehouse, table, table_has_data?(warehouse, table)
  end
end

print_log!
