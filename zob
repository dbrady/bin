#!/bin/bash
# zob - (zork b)ranch - use selecta to pick a branch to delete
# CLI workaround to a GUI-fluent team who use long, semantic branch names

# TODO: zob <pattern> - instead of selecta, grep for all branches matching
#       pattern. Show the pattern with a dire warning that they're ALL about to
#       be removed, then remove them en masse. Most of the time when I run zob
#       I'm doing a batch operation cleaning up all my old branches.
#
# TODO: zob -e - instead of selecta, open an editor showing all the branches,
#       commented out, with a message saying "uncomment a branch to remove it"

echo -e '\033[1;37;41mSelect a branch to DELETE\033[0m or \033[1;37;42mhit CTRL-C to abort\033[0m:'
branchname=$(git branch | ruby -ne 'puts $_.sub(/^\*/,"").strip' | grep -vE '^\s*(master|main|develop)$' | selecta)

echo "git branch -D $branchname"
git branch -D $branchname
