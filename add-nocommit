#!/usr/bin/env ruby
# This script creates pre-commit git hook that detects the text
# "NOCOMMIT" in the text. If found, git will abort the commit with a
# big warning message telling you that you have marked a file as being
# not committable.
#
# Installation:
#     With this script in your path, cd to the root of your project
# and run "add-nocommit". This will create the magical pre-commit
# file.
#
# Usage:
#     Just add a comment like:
#
# NOCOMMIT: this file has sensitive data / is bogus / etc!
#
# and if you forget and accidentally git add the file, the commit will
# fail, showing you the file and line containing the NOCOMMIT message.
#
# TODO: I don't like making this be the "pre-commit" file. I'd much
# rather see pre-commit shell out to run detect-nocommit or somesuch.
# Currently git hooks are not very robust, nor do they play well with
# each other. (I'd also much rather see this be either a global git
# hook or some kind of hook that could be committed to the repo to be
# shared with the team. Both of these are still things git doesn't yet
# do.)
def barf!(msg=nil)
  puts "*** add-nocommit: %s " % msg if msg
  exit -1
end

precommit_folder = "./.git/hooks"
precommit_file = "%s/pre-commit" % precommit_folder

barf! "Pardon me, but I'm lost. Is this a git repo? I don't see .git/hooks/ here!" unless File.directory? precommit_folder
barf! "Cowardly refusing to overwrite existing pre-commit hook!" if File.exists? precommit_file

File.open(precommit_file, 'w') do |file|
  file.puts DATA.read
end
system("chmod a+x #{precommit_file}")

__END__
#!/usr/bin/env ruby

# git-hook to check for NOCOMMIT messages in code that has been staged
# and abort the commit if found.
#
# To use: copy this file into your .git/hooks folder as pre-commit and
# make sure it is executable (chmod +x pre-commit). Now in your code,
# type // NOCOMMIT or # NOCOMMIT in a line and save it -- usually with
# an explanatory message like "# NOCOMMIT -- temp hack for bug #123".
# Git will still let you stage the file with git add, but it will stop
# you from committing the file until you remove the NOCOMMIT comment.
file = ""
delta = ""
line_num = 0
`git diff-index -p -M --cached HEAD`.each_line do |line|
  file = line.sub(/^....../, '') if line =~ /^(---|\+\+\+) (a|b)\//
  if line =~ /^@@ [\-\+\,\d\s]+ @@$/
    delta = line.rstrip
    if line =~ /\d \+(\d+),\d/
      line_num = $1.to_i - 1
    else
      line_num = 0
    end
  else
    line_num += 1 if line !~ /^- /
  end

  if line =~ /^\+.*NOCOMMIT/
    puts <<BANNER
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                                                                           !!!
!!!  ##    ##   ####     ####     ####   ##    ## ##    ##   ####   ########  !!!
!!!  ###   ## ##    ## ##    ## ##    ## ###  ### ###  ###    ##       ##     !!!
!!!  ####  ## ##    ## ##       ##    ## ## ## ## ## ## ##    ##       ##     !!!
!!!  ## ## ## ##    ## ##       ##    ## ##    ## ##    ##    ##       ##     !!!
!!!  ##  #### ##    ## ##       ##    ## ##    ## ##    ##    ##       ##     !!!
!!!  ##   ### ##    ## ##    ## ##    ## ##    ## ##    ##    ##       ##     !!!
!!!  ##    ##   ####     ####     ####   ##    ## ##    ##   ####      ##     !!!
!!!                                                                           !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                                                                           !!!
!!!                                                                           !!!
!!!           COMMIT ABORTED: You are staging a file with NOCOMMIT!           !!!
!!!                                                                           !!!
!!!                                                                           !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

BANNER
    puts "In file: #{file}"
    puts "In delta #{delta} near line #{line_num}:"
    puts line
    exit 1
  end
end

exit 0
