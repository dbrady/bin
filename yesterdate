#!/bin/bash
# Print yesterday's date in the requested date format Default is "%c", which is
# the "preferred local date and time representation", which is interesting as it
# includes day of the month as a 2-character space-padded field without a
# leading zero, e.g. "Thu Dec 4 10:28:39 MST 2008". This format CAN be
# constructed out of existing ruby date codes--on Linux. You need %e instead of
# %m to get " 4" instead of "04". Dates are evil. Fun!
format=$1

if [ "$1" == "" ]; then
    # echo "No arg given; using %c"
    format="%c"
else
    # echo "Arg '$1' given; using that"
    format=$1
fi

if [ `uname -a | awk '{ print $1 }'` == "Linux" ]; then
    # echo "Linux detected; using date command"
    date -d yesterday +$format
else
    # echo "Non-linux OS detected; using ruby to calculate date"
    ruby -e "puts (Time.now - 86400).strftime('$format')"
fi
