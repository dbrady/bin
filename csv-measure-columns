#!/usr/bin/env ruby
# fleds - st00pid hack to measure the largest value in each column of a CSV
require "csv"
require "optimist"

opts = Optimist.options do
  opt :delimiter, "Set CSV field delimiter", type: :string, default: ','
  opt :alpha, "Sort by key name"
  opt :value, "Sort by value size"
  opt :reverse, "Reverse sort direction"
end

csv = ARGF.readlines.join
fields = CSV.parse(csv, headers: true, col_sep: opts[:delimiter])

biggest = Hash.new(0)
smallest = Hash.new(0)

fields.each do |row|
  row.each_pair do |key, val|
    # puts "#{key} => #{val.inspect}"
    biggest[key] = [biggest[key], val ? val.size : 0].max
    smallest[key] = [smallest[key], val ? val.size : 0].min
  end
end

longest_key = biggest.keys.map(&:size).max
format = "%#{longest_key}s: min: %d, max: %d"

keys = if opts[:alpha]
         biggest.keys.sort
       elsif opts[:value]
         biggest.to_a.map(&:reverse).sort.map(&:reverse).map(&:first)
       else
         biggest.keys
       end

keys = keys.reverse if opts[:reverse]

keys.each do |key|
  puts sprintf(format, key, smallest[key], biggest[key])
end
