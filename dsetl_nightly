#!/usr/bin/env ruby
# dsetl_nightly <script> - run specific job
# TODO: Because snowflake, check for script in current branch!
require 'colorize'

# ENV['IS_DOCKER_LOCAL'] will be "1" (as a string) if we're in docker
if ENV['IS_DOCKER_LOCAL'].to_i.zero?
    puts "Must be run from inside the docker container."
    exit -1
end

if !ENV.has_key?("SCRIPT")
    echo 'ERROR: $SCRIPT is not set.'
    exit -1
end

job_name = ENV["SCRIPT"].sub(%r|^.*/|, '').sub(/\.py$/, '')
branch_name = `git current-branch`.strip
finance_branch_name = `(cd ~/data_services/etl/warehouse/finance && git current-branch)`.strip

if Dir.pwd !~ %r|data_services/etl/warehouse$|
  puts "*** SNOWFLAKE WARNING: YOU ARE NOT IN THE WAREHOUSE ***".bold.light_white.on_red
  exit -1
end

if !branch_name.include?(job_name)
  puts "*** SNOWFLAKE WARNING: BRANCH DOES NOT CONTAIN JOB NAME ***".bold.light_white.on_red
  puts "job_name: #{job_name}"
  puts "branch_name: #{branch_name}"
  puts
  puts "If you are sure you meant to do this, fire it off manually with"
  puts "python etl_nightly.py --job #{ENV['SCRIPT']}"
  exit -1
end

if branch_name != finance_branch_name
  str =<<BRANCH_WARNING
WARNING: warehouse and finance branches do not match. Is that OK?
Warehouse: #{branch_name}
Finance: #{finance_branch_name}
BRANCH_WARNING
  puts str.yellow
end

# Overwrite previous line so the command screenshots correctly
print "\033[1F"
puts "# python etl_nightly.py --job #{ENV['SCRIPT']} #{ARGV.join(' ')}"

system "python etl_nightly.py --job #{ENV['SCRIPT']} $@"
