#!/usr/bin/env ruby
# snow-get-complexity [<file>] - calculate a rough complexity for a given job

# This complexity is like flay: the numbers are meaningless except in comparison with others. Good luck.

# for now, let's say...
# line count * (number of selects, creates, drops, and updates) * 2**(number of CTEs + number of recursive CTEs)

script = ARGV.first || `get-ds-script`.strip

if script.empty?
  puts "Nothing to analyze. Specify job file as a script argument or with set-ds-script first"
  exit -1
end

lines = File.readlines(script).map(&:rstrip)

line_count = lines.size
sql_query_count = lines.find_all {|line| line =~ /\b(insert|select|update|delete|drop|create)\b/i }.size
cte_count = lines.find_all {|line| line =~ /\bAS\s*\(/i }.size
view_count = lines.find_all {|line| line =~ /\bcreate\b.*\bview\b/i }.size
recursive_cte_count = lines.find_all {|line| line =~ /\bRECURSIVE\b/i }.size


# THE FORMULA (change this as needed)
#
# - Base complexity is line count * query count. Mo script, mo problems
#
# - I've noticed that scripts with CTEs usually beat me up and take my lunch
#   money, so let's score them 2**c
#
# - Scripts with recursive CTEs beat me up, take my clothes, then duct tape me
#   to a flagpole to be found by the janitorial staff the next morning. Let's
#   change that exponent to 2**(c * r)
#
# - I just ran into my first script with views. It's pretty hairy and this
#   *might* be causative, so let's score those queries twice as hard. They
#   already get counted once with the table queries, so if we do (s + v), s will
#   scores non-view queries once and view queries once, then v scores the view
#   queries again. Nice.
complexity = line_count * sql_query_count * 2**(cte_count * (1+recursive_cte_count))
pretty_complexity = complexity.to_s.chars.to_a.reverse.each_slice(3).map(&:join).join(',').reverse

puts "Script: #{script}"
puts "l: line_count: #{line_count}"
puts "s: sql_query_count: #{sql_query_count}"
puts "c: cte_count: #{cte_count}"
puts "r: recursive_cte_count: #{recursive_cte_count}"
puts "v: view_count: #{view_count}"
puts "---------------------------------------"
puts "Using formula: C = l * (s + v) * 2**(c*(1+r))"
puts "---------------------------------------"
puts "Total Complexity: #{pretty_complexity}"
