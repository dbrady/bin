#!/usr/bin/env ruby
# snow-commit-ds-script "<commit_message>" - add and commit current ds script with message
# appends "in  $SCRIPT" if it isn't already there
commit_message, script=ARGV.first, ARGV.last
script ||= `get-ds-script`.strip

if script.empty?
    puts "You must set the SCRIPT variable first."
    exit -1
end

commit_message += " in #{script}" unless commit_message&.end_with?("in #{script}")

def command(cmd, log_message=nil)
  puts "\033[36m#{log_message || cmd}\033[0m"
  system cmd
end

# HACK for BI
if script =~ %r|sql/|
  sql = script.sub(%r|^.*sql/|, '')
  commit_message = commit_message.split.tap {|m| m.pop}.join(' ') + " " + sql
  command = "(cd sql && git add #{sql} && git commit -m \"#{commit_message}\")"
  puts command
  system command
else
  command "git add #{script}"
  command "snow-script-has-changes && git commit -m \"#{commit_message}\" || echo '\033[32mNo changes made to script; not committing.\033[0m'", "git commit -m \"#{commit_message}\""
end
