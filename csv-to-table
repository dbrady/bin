#!/usr/bin/env ruby
# csv-to-table - Print a csv file as a text table
#
# Usage:
#     csv-to-table filename.csv
#     cat filename.csv | csv-to-table
#
# Options:
#     -o, --org:              Print CSV as an org-mode table
#     -d<d>, --delimiter=<d>: Use alternate field delimiter
require "csv"
require "optimist"
require "text-table"

opts = Optimist.options do
  opt :org, "Emit table in org-mode style"
  opt :delimiter, "Set CSV field delimiter", type: :string, default: ','
  opt :headers, "Expect table to have headers", default: true
end

csv = ARGF.readlines.join

args = {first_row_is_head: opts[:headers]}

formatted = CSV.parse(csv, headers: true, col_sep: opts[:delimiter]).to_a.to_table(args).to_s

if opts[:org]
  # sadly the text-table to_table can't deal with the headache that is emacs'
  # org-mode. It accepts args like :horizontal_boundary and
  # :boundary_intersection but does not distinguish between horizontal end
  # boundaries and horizontal intersections. So text-table can do
  # "+---+---+---+---+" or "|---|---|---|---|", but we need "|---+---+---+---|".
  puts formatted.gsub(/^\+/, "|").gsub(/\+$/, "|")
else
  puts formatted
end
