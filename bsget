#!/usr/bin/env ruby
# bsget - get message from beanstalk queue
# Usage:
# bsput [-p port] [-h host] [-t tube] [-w wait_timeout] [-e] <message>

require 'rubygems'
require 'beanstalk-client'
require 'optimist'

opts = Trollop.options do
  opt :port, "port", :type => :integer, :default => 11300
  opt :host, "host", :default => "localhost"
  opt :tube, "tube to get message from", :default => "default"
  opt :wait, "seconds to wait", :type => :integer, :default => nil
  opt :peek, "do not delete message", :default => false
end

bs = Beanstalk::Pool.new ["#{opts[:host]}:#{opts[:port]}"]
# Beanstalk weirdage:
#   Given that you try to reserve on a tube that doesn't exist
#   And a job arrives in tube "default"
#   That job will be returned instead

# jobs = bs.stats_tube(opts[:tube])["current-jobs-ready"]
# if jobs == 0
#   puts "No messages ready in tube '#{opts[:tube]}'"
#   exit 1
# end

bs.watch(opts[:tube])
msg = bs.reserve(opts[:wait])
puts msg.body
msg.delete unless opts[:peek]


