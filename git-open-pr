#!/usr/bin/env ruby
# git open-pr - open pull request previously set with git-set-pr
require "colorize"
require "optimist"
require "yaml"

# TODO:
# - [ ] Pass Jira ticket instead of PR, use git-get-pr-id to look it up

class Logger
  # This is a terrible name. IT means "allow logging at all", but I don't want
  # to use the negative accessor "quiet"
  attr_reader :verbose, :timestamp_format

  def initialize(verbose, timestamp_format="%F %T")
    @verbose = verbose
    @timestamp_format = timestamp_format
  end

  def timestamp(now=Time.now)
    now.strftime(timestamp_format)
  end

  def log(message)
    return unless verbose
    puts "#{timestamp}: #{message}"
  end
end


String.disable_colorization unless $stdout.tty?

if ENV['IS_DOCKER_LOCAL'] == "1"
  raise "Can't access settings file from Docker. Run on OSX, please."
end

opts = Optimist.options do
  opt :debug, "Print extra debug info", default: false
  opt :pretend, "Run but do not open browser", default: false
end
logger = Logger.new(opts[:debug], "%F %T.%3N")
logger.log(opts.inspect)

pull_url = if ARGV.size.zero?
             `git get-pr -q`
           else
             pr = ARGV.first
             logger.log "pr: #{pr}"

             fetch_url = `git remote get-url origin`
                           .strip
                           .sub(/\.git$/, '')
                           .sub('git@github.com:', 'https://github.com/')
             pull_url = "#{fetch_url}/pull/#{pr}"
             logger.log "fetch_url: #{fetch_url}"
             logger.log "pull_url: #{pull_url}"
             pull_url
           end

puts "pull_url: #{pull_url.inspect}" if opts[:debug]

def osx?
  `uname -s`.strip == 'Darwin'
end

command = if osx?
            "open #{pull_url}"
          else
            "xdg-open #{pull_url} &> /dev/null"
          end

puts command.cyan if opts[:debug]
exit if opts[:pretend]
system command
