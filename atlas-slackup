#!/usr/bin/env ruby

# atlas-slackup [--no-color] - Display slackup status to console and copy it to
# the clipboard

# TODO: atlas-slackup <new|date> should create a new file for today or date
#       or, perhaps, -n is new and -e is edit most recent

# Fields
# ------
# Ticket: ATL link
# PR: GH link
# Title
# Deploy: This Week | Tomorrow | Today | In Progress | Done
# Update: n/a | In Review |
# Other: Optional, esp if off-ticket work
require 'colorize'
require 'date'

class Slackup
  class <<self
    def display_file(file, color=true)
      file = File.read(file)

      # This will print correct line-wrapping to stdout, but the thing sent to the
      # clipboard is still a hot mess. Maybe open a tempfile, write it out without
      # colors, and then cat that to pbcopy? And/or have a version of this that
      # takes a --no-color flag and instead of "cat file" we rerun this script with
      # the flag and capture that output to pbcopy.  (Test carefully and beware of
      # forkbombs.)

      colorize = color ? ->(text) { text.bold.yellow } : ->(text) { text }

      file.each_line do |line|
        if line.start_with? "*"
          puts
        end
        print line.rstrip.gsub(/\*(.+:)\*/, colorize['\1'] )
      end
      puts
      # file.each_line do |line|
      #   puts line.rstrip.gsub(/\*(.+:)\*/, '\1'.bold.yellow )
      # end
    end

    def new_file
      datestamp = Date.today.strftime("%F")
      filepath = filepath_for(datestamp)
      if !File.exists?(filepath)
        template = DATA.read
        File.open(filepath, "w") { |fp| fp.puts template }
      end
      edit_file datestamp
    end

    def edit_file(datestamp)
      filepath = if datestamp
                   filepath_for(datestamp)
                 else
                   most_recent_file
                 end
      command = [editor_command, filepath].join(' ')
      system command
    end

    def usage
      puts "atlas-slackup  - Display slackup status to console and copy it to the clipboard"
      puts "atlas-slackup [options] "
    end

    def slackup_folder
      slackup_folder = File.expand_path("~/acima/dox/slackup")
    end

    # given "2021-10-15"
    # returns "/path/to/slackup/2021-10-15.md"
    def filepath_for(datestamp)
      File.join(slackup_folder, datestamp) + ".md"
    end

    def editor_command
      "emacs -nw -q -l /Users/david.brady/.emacstiny"
    end

    def most_recent_file
      Dir.glob(File.join(slackup_folder, "202*.md")).sort.last
    end

    def copy_file
      system "cat #{most_recent_file} | pbcopy"
      puts "File copied to clipboard. Paste in #atlas-slackup to report status."
    end
  end
end

if __FILE__==$0
  most_recent_file = Slackup.most_recent_file
  puts "Most recent slackup file is #{most_recent_file}"

  nocolor = ARGV.delete "--no-color"

  if ARGV.empty? # run
    Slackup.display_file most_recent_file, !nocolor
    Slackup.copy_file
  elsif ARGV[0] == "-n"
    Slackup.new_file
    Slackup.copy_file
  elsif ARGV[0] == "-e"
    Slackup.edit_file ARGV[1]
    Slackup.copy_file
  else
    Slackup.usage
    exit 1
  end
end
__END__
*Ticket:* https://acima.atlassian.net/browse/ATL-????
*PR:* https://github.com/acima-credit/merchant_portal/pull/????
*Title:*
*Deploy:*
*Status:*
*Other Time:*
