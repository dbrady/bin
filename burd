#!/usr/bin/env ruby

# TODO: port this to ruby, maybe? We want to select a birb pic at random and
# grind it to ascii-art using chafa. BUT! It would be lovely if there were a
# caching scheme that would cache the chafa generation to save on compute
# cycles. When firing up 20 terminals at the start of a massive SOA session you
# can watch the birbs render at about 300 baud.


# Select image at random from directory
# Calculate cache image namef rom image filename and terminal resolution
# if image is in cache
#   read from cache into variable
# else
#   render image to variable
#   write variable to cache
# end
# print image from variable

srand(ARGV.empty? ? Time.now.to_i : ARGV.first.to_i)

filez = Dir.glob(File.join(File.expand_path('~'), "Pictures", "birb*"))
puts filez.shuffle.first

# the cache file:
# - is in the cache folder instead of the birbs folder
# - has XxY.ansi appended to the filename where XxY is the current terminal resolution
#
# So:
# Picture File: /Users/david.brady/Pictures/birb_magenta_body.jpeg
# xy: 236x52
# Cache File: /Users/david.brady/Pictures/birb_cache/birb_magenta_body.jpeg.236x52.ansi

# command = chafa `ls ~/Pictures/birb* | select-random`
