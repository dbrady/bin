#!/usr/bin/env ruby
# git get-pr-id - display pull request id if one is known
require "colorize"
require "extralite"
require "optimist"
require_relative "dbrady_cli"
String.disable_colorization unless $stdout.tty?

class Application
  include DbradyCli

  DATABASE_PATH = File.expand_path('~/bin/db/git-pr-history.db')

  def db
    @db ||= Extralite::Database.new(DATABASE_PATH)
  end

  def run
    @opts = Optimist.options do
      opt :debug, "Print extra debug info", default: false
      opt :pretend, "Print commands but do not run them", default: false
      opt :verbose, "Run with verbose output (overrides --quiet)", default: false
      opt :quiet, "Run with minimal output", default: false
    end
    opts[:quiet] = !opts[:verbose] if opts[:verbose_given]
    puts opts.inspect if opts[:debug]

    repo = git_repo_for(Dir.pwd)
    current_branch = `git current-branch`.strip
    query = "SELECT pr FROM pr_history WHERE repo='#{repo}' AND branch='#{current_branch}' AND deleted_at IS NULL"
    puts query.cyan if debug?
    pr = db.query_single_value(query)

    if pr.nil?
      $stderr.puts "No PR for #{repo}" if $stdout.tty?
      exit -1
    end

    puts pr
  end
end


if __FILE__ == $0
  Application.new.run
end
