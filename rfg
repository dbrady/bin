#!/bin/bash
# rfg - "rspec go" rus specs focused on a specific subset, set by rff ("rspec focus")
#
# usage:
#
# rfg [additional args or focus--will not change focus]

# TODO: if spec_focus contains "rspec", it's the full command, which I use when
# I need to force an env var like SPEC_SEED=true

# TODO: Feature (may require rewriting in ruby?)
# IFF:
#   1. There is exactly one cmd line argument
#   2. That argument is not a path (contains no /'s)
#   3. That argument is not an option (does not begin with -)
#   4. That argument exists as one of the loadable specs in rfload
# THEN:
#   rfload $1 && rfg
# ELSE:
#   # pass arguments directly to rspec as normal
#   bundle exec rspec $@

if [ "$1" = "-h" ]; then
    rfh
    exit 1
fi

# LOL/cry
# if this is request-pages-api
# Update 2017-12-18: John's Christmas Present To Dave: THIS IS NO LONGER NEEDED
# pwd | grep request-pages-api &&
#     # and you're not on vagrant
#     uname -a | grep -v vagrant &&
#     echo "#     #     #      #####   ######      #     #     #  #######" &&
#     echo "#     #    # #    #     #  #     #    # #    ##    #     #" &&
#     echo "#     #   #   #   #        #     #   #   #   # #   #     #" &&
#     echo "#     #  #     #  #  ####  ######   #     #  #  #  #     #" &&
#     echo " #   #   #######  #     #  #   #    #######  #   # #     #" &&
#     echo "  # #    #     #  #     #  #    #   #     #  #    ##     #" &&
#     echo "   #     #     #   #####   #     #  #     #  #     #     #" &&

#     echo "*** WARNING *** Dave, you're trying to run rpapi specs outside of vagrant" &&
#     echo "Please check your number and do not attempt your call again." &&
#     exit -1

echo 'Rspec Focus: Go! (rff - Focus; rfg - Go; rfc - Clear; rfe - Edit; rfv - View; rfh - Help)'
echo "Running focused specs"

grep -E "\brspec\b" ~/.spec_focus && (echo time $(cat ~/.spec_focus)) || (echo time bin/rspec $(cat ~/.spec_focus))

cirun
# TODO: Bring back the old, better version that parsed the RSpec output,
# e.g. if output includes /[1-9]+ failures/ cifail
# and if output include /[1-9]+ pending/ ciwarn
#
grep -E "\brspec\b" ~/.spec_focus &&
    ((echo found rspec running explicitly) && (time bash ~/.spec_focus) && cipass || (cifail && exit -1)) ||
        (time bin/rspec $@ $(cat ~/.spec_focus) && cipass || (cifail && exit -1))
