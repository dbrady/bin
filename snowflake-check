#!/usr/bin/env ruby

# Converting to Snowflake Stuff

puts <<HAPPY_PATH
Happy Path:
1. Job runs ok in redshift
2. Change config to snowflake
3. Job runs ok in snowflake
4. Config change PR in finance
5. PEP8/upstyle the code
6. Screenshot the job to Jira
7. Slack the links to Zack

Deeper Cut:

0. Prep
  export JOB=
  export CASE=

1. Job runs ok in redshift
  python etl_nightly.py --job $JOB

2. Change config to snowflake
  grep -A 15 JOB etl_nightly_config.json
  # inspect: just output to redshift?
  go feature/snowflake-moveover
  git co -b feature/DS-${CASE}/${JOB}-snowflake
  # EDIT JSON: gotta hand edit, sorry. Could probably be scripted tho. Ooh, or do with ruby json?
  # TEST THIS: ruby -rjson "file='etl_nightly_config.json';json=JSON.parse(File.read(file)); json['jobs']['$JOB']['dst_conn'] = 'snowflake'; File.open('new.#\{file}','w') { |fp| fp.puts JSON.pretty_generate(json) }"
  # ^^^ No. We have short arrays and empty arrays written as one-line per-entry

3. Job runs ok in snowflake
  python etl_nightly.py --job $JOB

4. Config change PR in finance
  # still in finance
  git commit -am "Change dst_conn to snowflake"
  git cram
  # Open pull request on github
  # https://github.com/acima-credit/data_services_finance/pull/new/feature/DS-${CASE}/${BRANCH}
  # PR TITLE:
  # PR Body

5. Upgrade the code
  # remove DISTKEY, SORTKEY
  pep-check $JOB.py
  # if changes needed
  git co -b feature/DS-${CASE}/${JOB}-snowflake
  # EDIT the file, sadly this is a human thing

6. Screenshot the job to Jira
  showjob
  # CMD+SHIFT+3
  # This will create 3 screenshot files and apparently they're in a random order each time because hahaha screw you of course they are

7. Slack the links to Zack
  - jira case
  - dataservices pull request
  - finance pull request
  - dsp changes, if any
HAPPY_PATH

# Happy Path:
# 1. Job runs ok in redshift
# 2. Change config to snowflake
# 3. Job runs ok in snowflake
# 4. Config change PR in finance
# 5. PEP8/upstyle the code
# 6. Screenshot the job to Jira




# 1. Make sure the job runs normally

# 2. Check the config for redshift. If it's only got 1 output in redshift try
#    changing it to snowflake to make sure it works.

# 3. If all that works:

#   3.1 Make a PR in finance to change the config to snowflake
#   3.2 Make a PR in data_services to upgrade the job.py to PEP8
#       - Watch out for line length, it's not always necessary. Ok, let's use --ignore E501
#       - Modernize string formats from "old" % format to f"{modern}" or "{style}".format(style="modern")
#       - Look for os.chdir(here) stuff and remove it
#       - Standardize SQL formats


# 4. Screencapture
#     - reset / C-l
#     - run job
#     - ensure successful output
#     - screencap that monitor
#     - attach screenshot to Jira case
